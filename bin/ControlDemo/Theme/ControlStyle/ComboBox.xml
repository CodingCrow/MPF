<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary Author="汪荣(QQ:386666951)" >

    <SolidColorBrush x:Key="ComboBoxItemOverBk" Color="#BDBDBD" />

    <SolidColorBrush x:Key="ComboBoxBk" Color="#333333" />
    <SolidColorBrush x:Key="ComboBoxBkBrBk" Color="#353535" />
    <SolidColorBrush x:Key="PopupBrBk" Color="#353535" />
    <SolidColorBrush x:Key="PopupBk" Color="#333333" />
    <SolidColorBrush x:Key="PopupDropDownBk" Color="#333333" />
    
    <!--ComboBox样式定义-->
    <Style TargetType="ComboBoxItem">
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                        <ContentPresenter Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="{DynamicResource ComboBoxItemOverBk}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxTransparentButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="#525252" CornerRadius="3" >
                        <Path Data="M 0 0 L 7 0 L 3.5 5 Z" Fill="White" StrokeThickness="0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBk}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBkBrBk}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
                    <Grid>
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <DockPanel Orientation="Horizontal" >
                                <ToggleButton Name="PART_Down" TabIndex="{TemplateBinding TabIndex}" MinWidth="16" DockPanel.Dock="Right"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ComboBoxTransparentButtonStyle}" />
                                <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                                  Control.Foreground="White" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <TextBox Name="PART_TextBox" TabIndex="{TemplateBinding TabIndex}" BorderThickness="0" Background="{TemplateBinding Background}" Visibility="{Binding Path=TemplatedParent.IsEditable,Converter=BToV}" Margin="0,1,1,1" />
                            </DockPanel>
                        </Border>
                        <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom">
                            <Border Name="DropDownBorder" BorderBrush="{DynamicResource PopupBrBk}" BorderThickness="1" Background="{DynamicResource PopupBk}">
                                <ScrollViewer Name="DropDownScrollViewer">
                                    <ItemsPresenter Name="ItemsPresenter" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate TargetType="ItemsPresenter" >
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True" >
                <Setter Property="Background" Value="{DynamicResource PopupDropDownBk}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>
